
1. 테이블 생성
	CREATE TABLE member(
	  userid VARCHAR2(10),
	  userpass varchar2(10),
	  username varchar2(10),
    CONSTRAINT pk_member_id PRIMARY KEY(userid)
	);
	

2. JDBC driver - ojdbc8.jar

	` 오라클 사이트에서 찾아서 다운로드
	` Sql Developer 설치하면 jdbc/lib 폴더에 있음
	
	프로젝트 > Build Path로 라이브러리 추가 
	
	[참고] 공식적으로 오라클 11까지는 Maven 라이브러리 지원 안됨 
	
	[참고] Tomcat에서 JDBC 드라이버 문제 발생시
		프로젝트 > Properties > Deployment Assembly에 추가 
		Add버튼 > Java Build Path Entries 

3. Lombok 라이브러리 설치하고 pom.xml에서 라이브러리 추가 
		<!-- ### Lombok ### -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.4</version>
			<scope>provided</scope>
		</dependency>

4. root-context.xml
   servlet-context.xml





4. jUnit 버전을 4.10 이상으로 해야 스프링 4.x 이상 버전 테스트 가능

		<!-- ### Test 버전 변경 ###-->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency> 
		
5. JDBC 테스트 
	(1) src/test/java  JdbcTest.java
			@Log4j
			public class JdbcTest {
			
				static {
					try {
						Class.forName("oracle.jdbc.driver.OracleDriver");
					} catch (Exception e) {
						e.printStackTrace();
					}
				}
				
				@Test
				public void testConnection() {
					try {
						Connection con = 
						DriverManager.getConnection("jdbc:oracle:thin:@127.0.0.1:1521:orcl", 
								"javassem", "1234");
						log.info(con);
					} catch (Exception e) {
						e.printStackTrace();
					}
				}
			}	
			
	(2) Run As > Junit test 로 구동
		


