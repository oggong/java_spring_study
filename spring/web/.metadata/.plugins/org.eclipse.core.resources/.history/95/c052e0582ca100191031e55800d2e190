package com.javassem.controller;

import java.util.Date;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.Errors;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.javassem.dao.MemberDAO;
import com.javassem.domain.MemberVO;
import com.javassem.service.MemberService;

@Controller
@RequestMapping("/user/") 

public class MemberController {
	
		// user/userJoin.do 요청일 경우 user/userJoin.jsp 뷰를 지정하기
		
	// 메서드 생성
	//@RequestMapping("/userJoin.do")
	//public void common() {	
	//}
	
	@RequestMapping(value="{url}.do")
	public String common(@PathVariable String url) {
		
		return "/user/"+url;
		// 경로 맞춰주기
	}
//===================================================	
	@Autowired
	MemberService memberService;
	
	
	/* 회원 가입*/
	@RequestMapping("userInsert.do")
	public ModelAndView insert(MemberVO vo) {
		int result = memberService.userInsert(vo);
		String message = "가입되지 않았습니다.";
		if(result>0) message =vo.getUserName()+"님 가입 축하 합니다.";
		ModelAndView mv = new ModelAndView();
		mv.addObject("result", result);
		mv.addObject("message",message);
		mv.setViewName("user/userJoin_ok");		
		return mv;
	}
	
	//요청된 값으로 연결
	//db를 갔다오지 않는 것들 통일되어있다?
//=====================================================
	@RequestMapping("idCheck.do", produces="application/text; charset=UTF-8")
	@ResponseBody // ajax 인 경우 반드시 해야 비동기 통신을 한다.
	public String idCheck(MemberVO vo) {
		// 인자로 String userId 로 받아도 됨
		MemberVO memberVO = memberService.idCheck_Login(vo);
		String result= "ID 사용 가능합니다";
		if(memberVO != null) result = "중복된 ID 입니다.";
		return result; 
	
	}


}
